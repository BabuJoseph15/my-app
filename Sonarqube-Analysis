pipeline {
    agent any 
     tools {
        maven 'maven3'
    }
    
    environment {
        // This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running.
        NEXUS_URL = "18.191.49.246:8081"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "http://18.191.49.246:8081/repository/Myapp-releases/"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "Babu-Nexus"
    }
    stages {
	stage('compile test') {
            steps {
		tool name: 'maven3', type: 'maven'
                sh 'mvn compile test'
	    }
	 }
	 stage("SonarQube analysis") {
             steps {
                 withSonarQubeEnv('sonar7') {
                  sh 'mvn sonar:sonar'
                 }    
             }
         }
	 stage('clean package') {
            steps {
		tool name: 'maven3', type: 'maven'
                sh 'mvn package'
		}
	 }
	 
	 stage("publish to nexus") {
            steps {
                script {
                    // Read POM xml file using 'readMavenPom' step , this step 'readMavenPom' is included in: https://plugins.jenkins.io/pipeline-utility-steps
                    pom = readMavenPom file: "pom.xml";
                    // Find built artifact under target folder
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                    // Print some info from the artifact found
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    // Extract the path from the File found
                    artifactPath = filesByGlob[0].path;
                    // Assign to a boolean response verifying If the artifact name exists
                    artifactExists = fileExists artifactPath;
                    
                    if(artifactExists) {
                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                        bv  
                        nexusArtifactUploader(
                            nexusVersion: 'nexus3',
                            protocol: 	'http',
                            nexusUrl: '18.191.49.246:8081',
                            groupId: 'in.java.home',
                            version: '1.0-SNAPSHOT',
                            repository: 'http://18.191.49.246:8081/repository/Myapp-releases/',
                            credentialsId: 'Babu-Nexus',
                            artifacts: [
                                // Artifact generated such as .jar, .ear and .war files.
                                [artifactId: 'myweb',
                                classifier: '',
                                file: artifactPath,
                                type: pom.packaging],

                                // Lets upload the pom.xml file for additional information for Transitive dependencies
                                [artifactId: 'myweb',
                                classifier: '',
                                file: 'pom.xml',
                                type: "pom"]
                            ]
                        );

                    } else {
                        error "*** File: ${artifactPath}, could not be found";
                    }
                }
            }
        }
        
    }
}
	
