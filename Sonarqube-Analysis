pipeline {
    agent any
     tools {
       maven 'maven3'
     }
     stages {
	stage('Unit Test') {
            steps {
		tool name: 'maven3', type: 'maven'
                sh 'mvn clean test'
	    }
	 }
	 stage('SonarQube analysis') {
             withSonarQubeEnv('My SonarQube Server') {
                sh 'mvn clean package sonar:sonar'
             } // SonarQube taskId is automatically attached to the pipeline context
         }
     }
     stage("Quality Gate"){
         timeout(time: 1, unit: 'HOURS') { // Just in case something goes wrong, pipeline will be killed after a timeout
         def qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
         if (qg.status != 'OK') {
             error "Pipeline aborted due to quality gate failure: ${qg.status}"
         }
      }
   }
	 stage('clean package') {
            steps {
		tool name: 'maven3', type: 'maven'
                sh 'mvn package'
		}
	 }
	 stage('Upload Artifacts to Nexus') {
           steps {
             nexusArtifactUploader artifacts: [
                  [
                     artifactId: 'myweb', 
                     classifier: '', 
                     file: 'target/myweb-1.0-SNAPSHOT.war', 
                     type: 'war'
                   ]
             ], 
             credentialsId: 'Babu-Nexus', 
             groupId: 'in.javahome', 
             nexusUrl: '18.188.178.77:8081', 
             nexusVersion: 'nexus3', 
             protocol: 'http', 
             repository: 'myapp-releases', 
             version: '${revision}'
	    }
         }
      }
      stage('Email Notification'){
          mail bcc: '', body: '''Hi Welcome to jenkins email alerts
          Thanks
          Babu''', cc: '', from: '', replyTo: '', subject: 'Jenkins Job', to: 'babu.joseph@gmail.com'
         }
     }
